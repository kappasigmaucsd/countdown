{"version":3,"sources":["logo.svg","App.js","components/Tab.jsx","img/crest.png","components/Tabs.jsx","components/Homepage.jsx","reportWebVitals.js","index.js"],"names":["App","Tab","React","Component","Homepage","calculateTimeLeft","year","Date","getFullYear","difference","timeLeft","days","Math","floor","hours","minutes","seconds","countDown","Object","keys","length","setState","time","clearInterval","timer","renderTime","entries","state","map","i","key","timeLeftVar","setInterval","this","className","src","crest","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAe,I,YCwBAA,I,mCCXAC,G,uDATX,aAAe,wC,0CAIf,WACI,OAAO,6C,GANGC,IAAMC,YCHT,GCKQD,IAAMC,UDLd,IAA0B,mCEqF1BC,E,kDA9EX,aAAe,IAAD,8BACV,gBAgBJC,kBAAoB,WAChB,IAAIC,GAAO,IAAIC,MAAOC,cAChBC,GAAc,IAAIF,KAAJ,gBAAkBD,KAAW,IAAIC,KACjDG,EAAW,GAWf,OATID,EAAa,IACbC,EAAW,CACPC,KAAMC,KAAKC,MAAMJ,EAAU,OAC3BK,MAAOF,KAAKC,MAAOJ,EAAU,KAAuB,IACpDM,QAASH,KAAKC,MAAOJ,EAAa,IAAO,GAAM,IAC/CO,QAASJ,KAAKC,MAAOJ,EAAa,IAAQ,MAI3CC,GA/BG,EAkCdO,UAAW,WACP,IAAIP,EAAW,EAAKL,oBAEiB,IAAjCa,OAAOC,KAAKT,GAAUU,OACtB,EAAKC,SAAS,CACVC,KAAMZ,IAGVa,cAAc,EAAKC,QA1Cb,EA8CdC,WAAa,WACT,OAAOP,OAAOQ,QAAQ,EAAKC,MAAML,MAAMM,KAAI,WAAeC,GAAO,IAAD,mBAAnBC,EAAmB,UAC5D,OACI,uBAAUA,OA/ClB,EAAKH,MAAQ,CACTL,KAAM,CACFX,KAAM,EACNG,MAAO,EACPC,QAAS,EACTC,QAAS,IAPP,E,qDAYd,WACI,IAAIe,EAAcC,YAAYC,KAAKhB,UAAW,KAC9CgB,KAAKZ,SAAS,CAAEC,KAAMS,M,oBA0C1B,WACI,OACI,gCACI,qBAAKG,UAAU,SAAf,SACI,+CAGJ,qBAAKA,UAAU,OAAf,SACI,6CAGJ,sBAAKA,UAAU,SAAf,UACI,kDACA,4CACA,qBAAKC,IAAKC,EAAOC,IAAI,sBACrB,+D,GAxEGnC,IAAMC,WCMdmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0c99cd08.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Tab extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return(<h1>bitches</h1>)\r\n    }\r\n}\r\n\r\nexport default Tab;","export default __webpack_public_path__ + \"static/media/crest.c0d30ce8.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport '../styles/homepage.css'\r\nimport Tab from \"./Tab\";\r\n\r\nclass TabGroup extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        TabGroup.propTypes = {\r\n            tabs: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    title: PropTypes.string.isRequired,\r\n                })\r\n            ).isRequired,\r\n        };\r\n\r\n        TabGroup.defaultProps = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { tabs, } = this.props;\r\n        return (\r\n            <div>\r\n                {tabs.map((tab) => (\r\n                    <Tab/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabGroup;","import React from 'react';\r\nimport '../styles/homepage.css'\r\n\r\nimport Tabs from \"./Tabs\";\r\nimport crest from '../img/crest.png'\r\n\r\nclass Homepage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            time: {\r\n                days: 0,\r\n                hours: 0,\r\n                minutes: 0,\r\n                seconds: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let timeLeftVar = setInterval(this.countDown, 1000);\r\n        this.setState({ time: timeLeftVar });\r\n    }\r\n\r\n    calculateTimeLeft = () => {\r\n        let year = new Date().getFullYear();\r\n        const difference = +new Date(`04/05/${year}`) - +new Date();\r\n        let timeLeft = {};\r\n\r\n        if (difference > 0) {\r\n            timeLeft = {\r\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n                minutes: Math.floor((difference / 1000 / 60) % 60),\r\n                seconds: Math.floor((difference / 1000) % 60)\r\n            };\r\n        }\r\n\r\n        return timeLeft;\r\n    }\r\n\r\n    countDown =()=> {\r\n        let timeLeft = this.calculateTimeLeft();\r\n\r\n        if (Object.keys(timeLeft).length !== 0) {\r\n            this.setState({\r\n                time: timeLeft,\r\n            });\r\n        }  else {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n\r\n    renderTime = () => {\r\n        return Object.entries(this.state.time).map(([key, value], i) => {\r\n            return (\r\n                <div key={key}>\r\n\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h1>Kappa Sigma</h1>\r\n                </div>\r\n\r\n                <div className=\"body\">\r\n                    <h1>Fuck Pike</h1>\r\n                </div>\r\n\r\n                <div className=\"footer\">\r\n                    <p>Pi-Psi Chapter of</p>\r\n                    <p>Kappa Sigma</p>\r\n                    <img src={crest} alt=\"Kappa Sigma Crest\"/>\r\n                    <p>@2021 by Kappa Sigma</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Homepage from \"./components/Homepage\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Homepage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}