{"version":3,"sources":["logo.svg","App.js","components/homepage.jsx","reportWebVitals.js","index.js"],"names":["App","Homepage","state","time","seconds","timer","startTimer","bind","countDown","secs","divisor_for_minutes","divisor_for_seconds","Math","floor","ceil","timeLeftVar","this","secondsToTime","setState","setInterval","clearInterval","onClick","m","s","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAe,I,YCwBAA,I,mCCuCAC,E,kDA5DX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CAAEC,KAAM,GAAIC,QAAS,GAClC,EAAKC,MAAQ,EACb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBALP,E,iDAQd,SAAcE,GACV,IAEIC,EAAsBD,EAAI,KAG1BE,EAAsBD,EAAsB,GAQhD,MALU,CACN,EATQE,KAAKC,MAAMJ,EAAI,MAUvB,EAPUG,KAAKC,MAAMH,EAAsB,IAQ3C,EALUE,KAAKE,KAAKH,M,+BAU5B,WACI,IAAII,EAAcC,KAAKC,cAAcD,KAAKd,MAAME,SAChDY,KAAKE,SAAS,CAAEf,KAAMY,M,wBAG1B,WACsB,GAAdC,KAAKX,OAAcW,KAAKd,MAAME,QAAU,IACxCY,KAAKX,MAAQc,YAAYH,KAAKR,UAAW,Q,uBAIjD,WAEI,IAAIJ,EAAUY,KAAKd,MAAME,QAAU,EACnCY,KAAKE,SAAS,CACVf,KAAMa,KAAKC,cAAcb,GACzBA,QAASA,IAIE,GAAXA,GACAgB,cAAcJ,KAAKX,S,oBAI3B,WACI,OACI,gCACI,wBAAQgB,QAASL,KAAKV,WAAtB,mBADJ,MAEQU,KAAKd,MAAMC,KAAKmB,EAFxB,OAE+BN,KAAKd,MAAMC,KAAKoB,S,GAvDpCC,IAAMC,WCUdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.797fc424.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nclass Homepage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { time: {}, seconds: 5}\r\n        this.timer = 0;\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n    }\r\n\r\n    secondsToTime(secs){\r\n        let hours = Math.floor(secs / (60 * 60));\r\n\r\n        let divisor_for_minutes = secs % (60 * 60);\r\n        let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n        let divisor_for_seconds = divisor_for_minutes % 60;\r\n        let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n        let obj = {\r\n            \"h\": hours,\r\n            \"m\": minutes,\r\n            \"s\": seconds\r\n        };\r\n        return obj;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n        this.setState({ time: timeLeftVar });\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timer == 0 && this.state.seconds > 0) {\r\n            this.timer = setInterval(this.countDown, 1000);\r\n        }\r\n    }\r\n\r\n    countDown() {\r\n        // Remove one second, set state so a re-render happens.\r\n        let seconds = this.state.seconds - 1;\r\n        this.setState({\r\n            time: this.secondsToTime(seconds),\r\n            seconds: seconds,\r\n        });\r\n\r\n        // Check if we're at zero.\r\n        if (seconds == 0) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.startTimer}>Start</button>\r\n                m: {this.state.time.m} s: {this.state.time.s}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Homepage from \"./components/homepage\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Homepage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}